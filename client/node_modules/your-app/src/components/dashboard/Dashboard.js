import React, { Component } from "react";
import PropTypes from 'prop-types';
import { connect } from 'react-redux';
import { logoutUser } from '../../actions/authentication';

import Sidebar from '../layout/Sidebar';
import AddCourse from '../adminPages/AddCourse';
import { BrowserRouter as Router, Route, withRouter, HashRouter } from "react-router-dom";
import DbAdmin from "../adminPages/DbAdmin";
import BookCategory from '../adminPages/BookCat'; 
import ViewCourse from "../adminPages/ViewCourse";
import CourseManage from "../adminPages/CourseManage";
import EditCourse from '../adminPages/EditCourse';
import CategoryManage from '../adminPages/CategoryManage';
import ViewBookCat from '../adminPages/ViewBookCat';
import EditBookCat from '../adminPages/EditBookCat';
import ViewCourseDetails from '../adminPages/ViewCourseDetails';
import UserManage from '../adminPages/UserManage';
import ViewStudentEnrolls from '../adminPages/ViewStudentEnrolls';
    
class Dashboard extends Component {


    render(){

        return(
                <div className="container-fluid pl-0">
                    <HashRouter>
                    <div className="row">
                    <div className="col-md-3">
                        <Sidebar />
                    </div>
                    
                    <div className="col-md-9">
                        <div className="dashboard-rightbar">
                            <h3>Quick Actions</h3>
                            <hr/>
                            <Router>
                                <Route exact path='/' component={DbAdmin}/>
                                <Route path='/addCourse' component={AddCourse} />  
                                <Route path='/addCategory' component={BookCategory} /> 
                                <Route path='/viewCourse' component={ViewCourse} />
                                <Route path='/course_manage' component={CourseManage} />
                                <Route path='/category_manage' component={CategoryManage} />
                                <Route path='/editCourse/:id' component={EditCourse} />
                                <Route path='/viewBookCat' component={ViewBookCat} />
                                <Route path='/editBookCat/:id' component={EditBookCat} />
                                <Route path='/ViewCourseDetails/:id' component={ViewCourseDetails} />
                                <Route path='/user_manage' component={UserManage} />
                                <Route path='/viewStudentEnrolls/:id' component={ViewStudentEnrolls} />
                            </Router>
                        </div>
                    </div>
                    
                </div>
                </HashRouter>
            </div>
        );
    }
}

Dashboard.propTypes = {
   // newbooks: PropTypes.func.isRequired,
    logoutUser: PropTypes.func.isRequired,
    auth: PropTypes.object.isRequired
};

const mapStateToProps = state => ({
    auth: state.auth,
    errors: state.errors
});

export default connect(mapStateToProps,{logoutUser})(withRouter(Dashboard));